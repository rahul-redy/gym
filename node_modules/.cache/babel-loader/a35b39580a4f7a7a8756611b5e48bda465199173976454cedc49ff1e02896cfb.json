{"ast":null,"code":"var _jsxFileName = \"/Users/rahulreddy/Desktop/gym/src/components/Exercises.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Pagination from \"@mui/material/Pagination\";\nimport { Box, Stack, Typography } from \"@mui/material\";\nimport { exerciseOptions, fetchData } from \"../utils/fetchData\";\nimport ExerciseCard from \"./ExerciseCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Exercises = _ref => {\n  _s();\n  let {\n    bodyPart,\n    exercises,\n    setExercises\n  } = _ref;\n  const [currentPage, setCurrentPage] = useState(1);\n  const exercisesPerPage = 9;\n  const indexOfLastExercise = currentPage * exercisesPerPage;\n  const indexOfFirstExercise = indexOfLastExercise - exercisesPerPage;\n  const currentExercises = exercises === null || exercises === void 0 ? void 0 : exercises.slice(indexOfFirstExercise, indexOfLastExercise);\n  const paginate = (e, value) => {\n    setCurrentPage(value);\n    window.scrollTo({\n      top: 1800,\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    const fetchExercisesData = async () => {\n      let exercisesData = [];\n      if (bodyPart === \"all\") {\n        exercisesData = await fetchData(\"https://exercisedb.p.rapidapi.com/exercises\", exerciseOptions);\n      } else {\n        exercisesData = await fetchData(`https://exercisedb.p.rapidapi.com/exercises/bodyPart/${bodyPart}`, exerciseOptions);\n      }\n      setExercises(exercisesData);\n    };\n    fetchExercisesData();\n  }, [bodyPart]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    id: \"exercises\",\n    sx: {\n      mt: {\n        lg: \"110px\"\n      }\n    },\n    mt: \"50px\",\n    p: \"20px\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      mb: \"46px\",\n      children: \"Showing Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      sx: {\n        gap: {\n          lg: \"110px\",\n          xs: \"50px\"\n        }\n      },\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      children: currentExercises === null || currentExercises === void 0 ? void 0 : currentExercises.map((exercise, index) => /*#__PURE__*/_jsxDEV(ExerciseCard, {\n        exercise: exercise\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      mt: \"100px\",\n      alignItems: \"center\",\n      children: (exercises === null || exercises === void 0 ? void 0 : exercises.length) > 9 && /*#__PURE__*/_jsxDEV(Pagination, {\n        color: \"standard\",\n        shape: \"rounded\",\n        defaultPage: 1,\n        count: Math.ceil((exercises === null || exercises === void 0 ? void 0 : exercises.length) / exercisesPerPage),\n        page: currentPage,\n        onChange: paginate,\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Exercises, \"GDYsIxij9y/ZFL42bMqqthZmeP4=\");\n_c = Exercises;\nexport default Exercises;\nvar _c;\n$RefreshReg$(_c, \"Exercises\");","map":{"version":3,"names":["React","useEffect","useState","Pagination","Box","Stack","Typography","exerciseOptions","fetchData","ExerciseCard","jsxDEV","_jsxDEV","Exercises","_ref","_s","bodyPart","exercises","setExercises","currentPage","setCurrentPage","exercisesPerPage","indexOfLastExercise","indexOfFirstExercise","currentExercises","slice","paginate","e","value","window","scrollTo","top","behavior","fetchExercisesData","exercisesData","id","sx","mt","lg","p","children","variant","mb","fileName","_jsxFileName","lineNumber","columnNumber","direction","gap","xs","flexWrap","justifyContent","map","exercise","index","alignItems","length","color","shape","defaultPage","count","Math","ceil","page","onChange","size","_c","$RefreshReg$"],"sources":["/Users/rahulreddy/Desktop/gym/src/components/Exercises.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport Pagination from \"@mui/material/Pagination\";\n\nimport { Box, Stack, Typography } from \"@mui/material\";\n\nimport { exerciseOptions, fetchData } from \"../utils/fetchData\";\n\nimport ExerciseCard from \"./ExerciseCard\";\n\nconst Exercises = ({ bodyPart, exercises, setExercises }) => {\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const exercisesPerPage = 9;\n\n  const indexOfLastExercise = currentPage * exercisesPerPage;\n  const indexOfFirstExercise = indexOfLastExercise - exercisesPerPage;\n\n  const currentExercises = exercises?.slice(\n    indexOfFirstExercise,\n    indexOfLastExercise\n  );\n  const paginate = (e, value) => {\n    setCurrentPage(value);\n    window.scrollTo({ top: 1800, behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    const fetchExercisesData = async () => {\n      let exercisesData = [];\n\n      if (bodyPart === \"all\") {\n        exercisesData = await fetchData(\n          \"https://exercisedb.p.rapidapi.com/exercises\",\n          exerciseOptions\n        );\n      } else {\n        exercisesData = await fetchData(\n          `https://exercisedb.p.rapidapi.com/exercises/bodyPart/${bodyPart}`,\n          exerciseOptions\n        );\n      }\n      setExercises(exercisesData);\n    };\n    fetchExercisesData();\n  }, [bodyPart]);\n\n  return (\n    <Box id=\"exercises\" sx={{ mt: { lg: \"110px\" } }} mt=\"50px\" p=\"20px\">\n      <Typography variant=\"h3\" mb=\"46px\">\n        Showing Results\n      </Typography>\n      <Stack\n        direction=\"row\"\n        sx={{ gap: { lg: \"110px\", xs: \"50px\" } }}\n        flexWrap=\"wrap\"\n        justifyContent=\"center\"\n      >\n        {currentExercises?.map((exercise, index) => (\n          <ExerciseCard key={index} exercise={exercise} />\n        ))}\n      </Stack>\n      <Stack mt=\"100px\" alignItems=\"center\">\n        {exercises?.length > 9 && (\n          <Pagination\n            color=\"standard\"\n            shape=\"rounded\"\n            defaultPage={1}\n            count={Math.ceil(exercises?.length / exercisesPerPage)}\n            page={currentPage}\n            onChange={paginate}\n            size=\"large\"\n          />\n        )}\n      </Stack>\n    </Box>\n  );\n};\n\nexport default Exercises;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}